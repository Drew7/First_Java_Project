int MyScore = 4;
MyScore--;
MyScore = MyScore*2;
MyScore = MyScore/3;
System.out.println("My score is " + MyScore);

int MyDaughterAge;

double dayDiff = (date2.getTime() - date1.getTime()) / (1000*60*60*24);

Date birth = new SimpleDateFormat("YYYY-MM-DD").parse("2012-07-20"); 
Date current = new Date();
 


MyDaughterAge = java.util.Date() - 1;


public static Integer calculateAge(final Date birthday)
{
    Calendar dob = Calendar.getInstance();
    Calendar today = Calendar.getInstance();
 
    dob.setTime(birthday);
    
    dob.add(Calendar.DAY_OF_MONTH, -1);
 
    int age = today.get(Calendar.YEAR) - dob.get(Calendar.YEAR);
    if (today.get(Calendar.DAY_OF_YEAR) <= dob.get(Calendar.DAY_OF_YEAR)) {
        age--;
    }
    return age;
};

int MyDaughterYears;
int MyDaughterMonth;
int MyDaughterDays;
MyDaughterYears = java.util.GregorianCalendar.getInstance().getTime().getYear() - 112;
MyDaughterMonth = java.util.GregorianCalendar.getInstance().getTime(). - 112;
MyDaughterDays  = java.util.GregorianCalendar.getInstance().getTime().getDay() - 112;


Cannot use this in a static contextGetDate();

import java.util.Calendar;
import java.util.Date;
import java.util.Formatter;
 
public class DatesSubstraction {
 
    private static String formatDate(Calendar calendar) {
        Formatter formatter = new Formatter();
        formatter.format(" %1$tF %1$tr", calendar);
        return formatter.toString();
    }
 
    public static void main(String[] args) {
        // Получаем текущую дату
        Date date = new Date(); // Лучше использовать Calendar.getInstance()
 
        // Формируем календарь на основе текущей даты
        Calendar currentCalendar = Calendar.getInstance();
        // Устанавливаем значение календаря в соответствии с датой
        currentCalendar.setTime(date);
 
        System.out.println("Current date is: " + formatDate(currentCalendar));
 
        // Формируем календарь, который будет нам показывать 1-е число следующего месяца
        // от текущей даты
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
 
        // Для формирования следующего месяца устанавливаем сначал
        // первое число (время: 00:00:00.00), а потом переходим на следующий месяц
        calendar.set(Calendar.DAY_OF_MONTH, 1);
        calendar.set(Calendar.HOUR, 0);
        calendar.set(Calendar.MINUTE, 0);
        calendar.set(Calendar.SECOND, 0);
        calendar.set(Calendar.MILLISECOND, 0);
        calendar.add(Calendar.MONTH, 1);
 
        System.out.println("Date for next month is: " + formatDate(calendar));
       
        // Находим разницу между двумя календарями в милисекундах
        long diff = calendar.getTimeInMillis() - currentCalendar.getTimeInMillis();
       
        // в секундах
        long seconds = diff / 1000;
        // в минутах
        long minutes = seconds / 60;
        // в часах
        long hours = minutes / 60;
        // в днях
        long days = hours / 24;
       
        System.out.println("Difference in seconds: " + seconds);
        System.out.println("Difference in minutes: " + minutes);
        System.out.println("Difference in hours: " + hours);
        System.out.println("Difference in days: " + days);
    }
}


Syntax error, insert ";" to complete BlockStatements	GregorianCalendar cannot be resolved to a typeGregorianCalendar cannot be resolved to a type
Syntax error on token "import", assert expectedimport java.util.GregorianCalendar; GregorianCalendar checkDay = new GregorianCalendar();

